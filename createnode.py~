import node
import block
import transaction

i_am = node.node()	#creating a node instance for the peer
i_am.blockhead.propblock = block.block(9999)

#teacher's public keys are kept static
teacher1publickey=1
teacher2publickey=2
teacher3publickey=3
teacher4publickey=4
teacher5publickey=5

student1publickey=876

t1 = transaction.transaction(0,1)
t1.sign = "signadmin"
t1.hash = 100
t1.outlist = [transaction.outputtrans() for i in range (t1.outcount)]
t1.outlist[0].value = transaction.transaction(0,0).STAR
t1.outlist[0].addr = teacher1publickey
i_am.blockhead.propblock.add_trans_to_block(t1)


t1 = transaction.transaction(0,1)
t1.sign = "signadmin"
t1.hash = 101
t1.outlist = [transaction.outputtrans() for i in range (t1.outcount)]
t1.outlist[0].value = transaction.transaction(0,0).STAR
t1.outlist[0].addr = teacher2publickey
i_am.blockhead.propblock.add_trans_to_block(t1)

t1 = transaction.transaction(0,1)
t1.sign = "signadmin"
t1.hash = 102
t1.outlist = [transaction.outputtrans() for i in range (t1.outcount)]
t1.outlist[0].value = transaction.transaction(0,0).STAR
t1.outlist[0].addr = teacher3publickey
i_am.blockhead.propblock.add_trans_to_block(t1)

t1 = transaction.transaction(0,1)
t1.sign = "signadmin"
t1.hash = 103
t1.outlist = [transaction.outputtrans() for i in range (t1.outcount)]
t1.outlist[0].value = transaction.transaction(0,0).STAR
t1.outlist[0].addr = teacher4publickey
i_am.blockhead.propblock.add_trans_to_block(t1)

t1 = transaction.transaction(0,1)
t1.sign = "signadmin"
t1.hash = 104
t1.outlist = [transaction.outputtrans() for i in range (t1.outcount)]
t1.outlist[0].value = transaction.transaction(0,0).STAR
t1.outlist[0].addr = teacher5publickey
i_am.blockhead.propblock.add_trans_to_block(t1)

t = transaction.transaction(1,2)
t.sign = "teacher1sign"
t.hash = 12346
t.inlist[0].hash = 100
t.inlist[0].n = 0
t.inlist[0].sign = "teacher1sign"
t.inlist[0].pub = teacher1publickey
t.outlist[0].value = 5
t.outlist[0].addr = student1publickey
t.outlist[1].value = 95
t.outlist[1].addr = teacher1publickey

result = t.validatetrans(i_am)
print "result"
print result
